# Generated by Django 3.0.7 on 2021-07-08 06:05

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('UserAuthAPI', '0018_auto_20190509_0506'),
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=20000, verbose_name='帖子正文')),
                ('imageUrls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), size=None, verbose_name='帖子中出现的url')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=16, verbose_name='标签标题')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewableToGuest', models.BooleanField(verbose_name='未登录用户是否可见')),
                ('deleted', models.BooleanField(default=False, verbose_name='是否被删除')),
                ('censored', models.BooleanField(default=False, verbose_name='是否被审查')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('viewCount', models.IntegerField(default=0, verbose_name='访问次数')),
                ('censoredBy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_censored_by', to='UserAuthAPI.UserProfile')),
                ('contentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CommunityAPI.Content')),
                ('createdBy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_created_by', to='UserAuthAPI.UserProfile')),
                ('deletedBy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_deleted_by', to='UserAuthAPI.UserProfile')),
                ('replyToComment', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_reply_to_comment', to='CommunityAPI.Post')),
                ('replyToId', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_reply_to_id', to='CommunityAPI.Post')),
                ('tagId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CommunityAPI.Tag')),
            ],
        ),
        migrations.AddField(
            model_name='content',
            name='postId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CommunityAPI.Post'),
        ),
    ]
